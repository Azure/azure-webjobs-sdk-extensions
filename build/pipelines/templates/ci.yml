## CAUTION: Changing this template will affect all pipelines that extend it.
parameters:
  - name: skip_assembly_signing
    displayName: Skip Assembly Signing
    type: boolean
    default: false
  - name: target_projects
    displayName: Projects To Build
    type: object
    default: []
  - name: target_tests
    displayName: Test Projects
    type: object
    default: []

variables:
  - template: variables.yml
  - name: targetProjects
    value: ${{ join(';',parameters.target_projects) }}
  - name: targetTests
    value: ${{ join(';',parameters.target_tests) }}

jobs:
- job: InitializePipeline
  pool: 
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMS2019TLS
  steps:
  - task: 1ESHostedPoolValidation@1

  - task: PowerShell@2
    displayName: 'Initialize'
    name: Initialize
    inputs: 
      filePath: '$(Build.Repository.LocalPath)\build\initialize-pipeline.ps1'
    ## checks the PR title for inline commands, e.g. [pack]

- job: BuildAndTest
  pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMS2019TLS
  dependsOn: InitializePipeline
  condition: succeeded()
  variables:
    signPackages: $[ dependencies.InitializePipeline.outputs['Initialize.SignPackages'] ]
  steps:    
  - task: 1ESHostedPoolValidation@1

  - pwsh: |
      if ($$(hasTag)) {
        $config = "Release"
        Write-Host "Git tag found. Setting Configuration to '$config'"
        $env:Configuration = $config
        Write-Host "##vso[task.setvariable variable=Configuration]$config" # let downstream tasks read this variable
      }      

      $testsArray = "$(targetTests)" -split ";"

      Write-Host "Running tests:"
      Write-Host $testsArray -separator "`n"

      # building tests will automatically build the main project as well
      .\run-tests.ps1 -tests $testsArray -Configuration "$(Configuration)"
    displayName: "Build and test"    
    env:
      CommitHash: $(Build.SourceVersion)
      AzureWebJobsStorage: $(Storage)
      AzureWebJobsDashboard: $(Storage)
      AzureWebJobsCosmosDBConnectionString: $(CosmosDB)
      ConnectionStrings:CosmosDB: $(CosmosDB)

  - task: PublishTestResults@2
    displayName: "Publish XUnit test results"
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/TEST.xml'
      mergeTestResults: true
      buildConfiguration: $(Configuration)
      testRunTitle: 'XUnit Tests'
    condition: always()

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@2
    displayName: 'ESRP CodeSigning - Authenticode'
    condition: eq(variables.signPackages, true)
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: 'src'
      Pattern: Microsoft.Azure.WebJobs.Extensions*.dll
      signConfigType: inlineSignParams
      inlineOperation: |
        [
          {
              "KeyCode" : "CP-233863-SN",
              "OperationCode" : "StrongNameSign",
              "Parameters" : {},
              "ToolName" : "sign",
              "ToolVersion" : "1.0"
          },
          {
              "KeyCode" : "CP-233863-SN",
              "OperationCode" : "StrongNameVerify",
              "Parameters" : {},
              "ToolName" : "sign",
              "ToolVersion" : "1.0"
          },
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolSign",
            "Parameters": {
              "OpusName": "Microsoft",
              "OpusInfo": "http://www.microsoft.com",
              "FileDigest": "/fd \"SHA256\"",
              "PageHash": "/NPH",
              "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
            },
            "ToolName": "sign",
            "ToolVersion": "1.0"
          },
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolVerify",
            "Parameters": {},
            "ToolName": "sign",
            "ToolVersion": "1.0"
          }
        ]

  - pwsh: |
      $packageSuffix = 0
      if (-not $$(hasTag)) {
        $packageSuffix = $(buildNumber)
        Write-Host "No git tag found. Setting package suffix to '$packageSuffix'"
      }

      if ($$(hasTag)) {
        $config = "Release"
        Write-Host "Git tag found. Setting Configuration to '$config'"
        $env:Configuration = $config
        Write-Host "##vso[task.setvariable variable=Configuration]$config" # let downstream tasks read this variable
      }

      $projectsArray = "$(targetProjects)" -split ";"

      Write-Host "Building projects:"
      Write-Host $projectsArray -separator "`n"

      .\Build.ps1 -projects $projectsArray -buildNumber "$(buildNumber)" -packageSuffix "$packageSuffix" -outputDirectory "$(buildOutputDirectory)" -pack $True -Configuration "$(Configuration)"
    displayName: "Pack build"

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@2
    displayName: 'ESRP CodeSigning: Nupkg'
    condition: eq(variables.signPackages, true)
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: 'buildoutput'
      Pattern: 'Microsoft.Azure.WebJobs.Extensions*.nupkg'
      signConfigType: inlineSignParams
      inlineOperation: |
        [
            {
              "KeyCode": "CP-401405",
              "OperationCode": "NuGetSign",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-401405",
              "OperationCode": "NuGetVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
        ]

  - task: ManifestGeneratorTask@0
    displayName: "SBOM Generation"
    inputs:
      BuildDropPath: '$(buildOutputDirectory)'
      Verbosity: 'Information'

  - publish: '$(buildOutputDirectory)'
    artifact: drop